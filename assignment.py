# -*- coding: utf-8 -*-
"""Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O-eikOGK2kORDs-Znq42lHkW_mRx64nS
"""

#Numpy Creation of 3x5
import numpy as np
a=np.random.randint(1,20,15)
print(a)

#reshape the array
b=a.reshape((3,5))
print(b)

#print shape of array
print(b.shape)

#replace max in each row by 0
np.max(b,axis=1)
#print(len(b))
for i in b:
  #print(i)
  m=i.max()
  print(m)
  for j in range(len(i)):
    if i[j]==m:
      #print(i[j])
      i[j]=0
      #print(i[j])
print(b)

# creation of two-dimentional array of size 4x3
d=np.array([[1,7,9],[9,5,7],[10,6,5],[14,23,3]],np.int32)
print(type(d),d.shape,d.dtype)

#calculate eigen values and Right eigen vector
ar=np.array([[3,-2],[1,0]])
print(ar)
e,v=np.linalg.eig(ar)
print("Eigen value:\n", e)
print("Right eigen vector :\n", v)

#sum of diagonal elements
arr=np.array([[0,1,2],[3,4,5]])
print(arr)
sum=np.trace(arr)
print(sum)

#reshape the given data
array1=np.arange(1,7)
print(array1)
array1=array1.reshape((3,2))
print(array1)
array1=array1.reshape((2,3))
print(array1)

# Commented out IPython magic to ensure Python compatibility.
#matplotlib
# %matplotlib inline

from matplotlib import pyplot as pt

# available styles
pt.style.available

pt.style.use("grayscale")

#sample data
#programming languages
prog_lang=['Java', ' Python', 'PHP', 'JavaScript', 'C#','C++']
#popularity
pop=[22.2, 17.6, 8.8, 8, 7.7, 6.7]
#color
col=['orange','green','blue','red','cyan','indigo']
explode=[0.2,0,0,0,0,0]

pt.pie(x=pop,labels=prog_lang,colors=col,explode=explode,wedgeprops={'edgecolor':'black'},shadow=True,autopct='%1.1f%%')
pt.tight_layout()
pt.title("Popularity of Programming Languages")
pt.show()

